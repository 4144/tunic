# TODO: generate

d-i apt-setup/extras boolean true

# #Step 1
# d-i debconf debconf/frontend select Noninteractive
# d-i debian-installer/locale string en_US.UTF-8
# d-i debian-installer/language select en
 d-i debian-installer/language select fr
# 
# #Step 2
# d-i time/zone string Americas/New_York
# 
# #Step 3
# d-i console-setup/ask_detect boolean false
# d-i console-setup/layoutcode string en
# 
# #Step 4
# d-i partman-auto/disk string /dev/sda
# d-i partman-auto/method string regular
# d-i partman-auto/choose_recipe select atomic
# d-i partman/confirm_write_new_label boolean true
# d-i partman/choose_partition select finish
# d-i partman/confirm boolean true
# 
# #Step 5
d-i passwd/user-fullname string vagrant
d-i passwd/username string vagrant
d-i passwd/user-password password vagrant
d-i passwd/user-password-again password vagrant
d-i user-setup/allow-password-weak boolean true
# d-i netcfg/get_hostname string vagrant
# d-i passwd/auto-login boolean true
# 
# #if you want to start commands after the installation
# #ubiquity ubiquity/success_command string yourcommands
# 
# #Step 6
# ubiquity languagechooser/language-name select English
# ubiquity countrychooser/shortlist select US
# ubiquity localechooser/supported-locales multiselect en_US.UTF-8
# ubiquity localechooser/languagelist select en
# 
# ubiquity localechooser/translation/warn-light boolean true
# ubiquity debconf/language select en
# 
# ubiquity keyboard-configuration/layout select English
# ubiquity keyboard-configuration/layoutcode select en
# ubiquity keyboard-configuration/modelcode select pc105
# ubiquity keyboard-configuration/store_defaults_in_debconf_db boolean true
# ubiquity keyboard-configuration/unsupported_layout boolean true
# 
# ubiquity ubiquity/summary 
# ubiquity ubiquity/reboot boolean true



d-i     localechooser/supported-locales    en_US.UTF-8
d-i     keyboard-configuration/xkb-keymap  select no
d-i     keyboard-configuration/layoutcode  string no

d-i     debian-installer/splash            boolean false
d-i     console-setup/ask_detect           boolean false
d-i     console-setup/layoutcode           string no
d-i     console-setup/variantcode          string

### Partitioning

d-i partman-auto/disk string /dev/sda
d-i partman-auto/method string regular
d-i partman-auto/choose_recipe select atomic
d-i     partman/default_filesystem                     string ext4
d-i     partman/choose_partition                       select finish
d-i partman-lvm/device_remove_lvm boolean true
d-i partman-md/device_remove_md boolean true
d-i partman-lvm/confirm             boolean true
d-i partman-lvm/confirm_nooverwrite boolean true
d-i     partman-partitioning/confirm_write_new_label   boolean true
d-i     partman/confirm                                boolean true
d-i     partman/confirm_nooverwrite                    boolean true
d-i     partman/confirm_write_new_label                boolean true
d-i     partman-md/confirm                             boolean true

# Time
d-i     time/zone               string  America/Los_Angeles
d-i     clock-setup/utc         boolean true
d-i     clock-setup/ntp         boolean true
d-i     clock-setup/ntp-server  string ntp.ubuntu.com

# User
d-i     passwd/user-fullname            string ubuntu
d-i     passwd/username                 string ubuntu
d-i     passwd/user-password            password ubuntu
d-i     passwd/user-password-again      password ubuntu
d-i     user-setup/allow-password-weak  boolean true
d-i     user-setup/encrypt-home         boolean false

# Use non-free packages
ubiquity ubiquity/use_nonfree boolean true

# -------- Customize at the end of a successful installation.

# Ubiquity completly ignores the debian installer command 'preseed/late_command',
# instead we need to use 'ubiquity/success_command'.

# We permanently enable the wired network,
# install OpenSSH, and move its port to 12345,
# install Ansible locally (just in case),
# and add a NFS mount point in /etc/fstab to my Ansible scripts
# (which will be automatically mounted after the reboot).
ubiquity ubiquity/success_command string \
  in-target apt-get -y install openssh-server; \
  in-target apt-get update;

# Finish off the install by rebooting the freshly installed Linux Mint desktop
d-i  ubiquity/reboot  boolean true

# References
# https://www.leifove.com/2016/11/fully-automated-linux-mint-desktop.html
# https://web.archive.org/web/20150921124244/http://community.linuxmint.com/tutorial/view/54
